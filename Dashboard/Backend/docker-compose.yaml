version: "3.7"

services:
  app:
    build:
      context: ./
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8080
    environment:
      - ENVIRONMENT=test
      - PYTHONUNBUFFERED=1
      - DEBUG=1
      - PORT=8080
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=secret
      - AWS_SESSION_TOKEN=anything
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
    expose:
      - 8080
    ports:
      - 8080:8080
    volumes:
      - ./:/app
    depends_on:
      - minio

  inference_service:
    build:
      context: ./
    command: uvicorn inference_service.main:app --reload --host 0.0.0.0 --port 8081
    environment:
      - ENVIRONMENT=test
      - PYTHONUNBUFFERED=1
      - DEBUG=1
      - PORT=8081
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=secret
      - AWS_SESSION_TOKEN=anything
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
    expose:
      - 8081
    ports:
      - 8081:8081
    volumes:
      - ./:/app
    depends_on:
      - minio

  dynamodb:
    image: amazon/dynamodb-local
    command: -jar DynamoDBLocal.jar -sharedDb 
    ports:
      - 8000:8000
    environment:
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=secret
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=secret
    ports:
      - 8001:8001
    depends_on:
      - dynamodb

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data

volumes:
  minio-data: